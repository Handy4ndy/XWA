<?php
/**
 * XRPLWinAnalyzer (XWA) main config file.
 */

$r = [

  # Sync this version with composer.json
  'version' => '0.0.1',

  /*
  |--------------------------------------------------------------------------
  | Scan limit
  |--------------------------------------------------------------------------
  | Default: 1000
  | How much results maximum DynamoDB Count action will count per query.
  | Put 0 (zero) for no limit - DynamoDB will paginate this when 1MB limit is reached.
  | Smaller limit = more queries and more pages.
  | This is relevant only for rAccount with abnormally large amount of transactions
  | per calendar day, eg. over 15k transactions will yield 4 pages of data with 5000 limit.
  | Warning: Changing this value requires clearing Redis cache and empty "maps" table.
  |   Changing this value requires clearing reverse proxy cache (eg. Varnish, CloudFront ...)
  |   It is recommended not to change this value on production that is already running.
  */
  'scan_limit' => env('XWA_SCAN_LIMIT', 1000),

  /*
  |--------------------------------------------------------------------------
  | Paginator breakpoint
  |--------------------------------------------------------------------------
  | Default: 500
  | How much results one request can pull per txType, before paginating multiple ledger days.
  | This value does not take into account internal per-ledger-day paginating.
  | Max transactions returned per request can be eg. <paginator_breakpoint>*<number of transaction types>
  | for internal (ledger-day) paginating - in short when there is large amount of transactions in one day.
  | Warning: Changing this value requires clearing reverse proxy cache (eg. Varnish, CloudFront ...)
  |   It is recommended not to change this value on production that is already running.
  */
  'paginator_breakpoint' => env('XWA_PAGINATIOR_BREAKPOINT', 500),

  /*
  |--------------------------------------------------------------------------
  | Transaction types list
  |--------------------------------------------------------------------------
  | Autogenerated from codebase
  | List of transaction types, keyed by type integer.
  */
  'transaction_types' => [
    //<DTransaction::TYPE> => Typenamepart,
    //1 => 'Payment',
    //2 => 'Activation',
    //...
  ],
  
  /*
  |--------------------------------------------------------------------------
  | XRPL Address characters
  |--------------------------------------------------------------------------
  | Characters that can be in address.
  | DynamoDB transaction databases are created according to thiese characters.
  */
  'address_characters' => [
    //letters lowercase:
    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
    //numbers:
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
  ],
];

//generate transaction_types
$dir = __DIR__.'/../app/Models';
$dirlist = \scandir($dir);
foreach($dirlist as $v) {
  if(\str_starts_with($v,'DTransaction') && $v !== 'DTransaction.php' && \str_ends_with($v,'.php')) {
    $modelname = '\\App\\Models\\'.\substr($v,0,-4);
    $r['transaction_types'][$modelname::TYPE] = \substr(\substr($v,0,-4),12);
  }
}

\ksort($r['transaction_types'],SORT_NUMERIC);

return $r;
